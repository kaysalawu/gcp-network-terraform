apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
    spec:
      serviceAccountName: api-server-sa
      containers:
        - name: api-server
          image: europe-west2-docker.pkg.dev/prj-hub-lab/g5-hub-eu-repo/api-server:latest
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: api-server-service
  namespace: default
spec:
  selector:
    app: api-server
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
# ServiceAccount for the API Server
# This ServiceAccount is used by the `api-server` to authenticate
# with the Kubernetes API for creating and managing `pingresources`.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-server-sa
  namespace: default

---
# ClusterRole for API Server
# Grants the `api-server` permissions to perform all actions on `pingresources`
# cluster-wide, allowing full management of these resources.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api-server-cluster-role
rules:
  - apiGroups: ["example.com"]
    resources: ["pingresources"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: api-server-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: api-server-cluster-role
subjects:
  - kind: ServiceAccount
    name: api-server-sa
    namespace: default
